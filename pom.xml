<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>nl.tudelft.jpacman</groupId>
	<artifactId>jpacman-framework</artifactId>
	<version>7.0.0-SNAPSHOT</version>
	<url>https://github.com/serg-delft/jpacman-framework</url>
	<description>
		Pacman-inspired game, for teaching testing purposes.
	</description>
	<organization>
		<url>http://www.tudelft.nl</url>
		<name>Delft University of Technology</name>
	</organization>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<distributionManagement>
		<repository>
			<id>jpacman-deployment</id>
			<url>https://devhub.ewi.tudelft.nl/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>jpacman-deployment</id>
			<url>https://devhub.ewi.tudelft.nl/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.0.1</maven>
	</prerequisites>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <junit.jupiter.version>5.0.0-M4</junit.jupiter.version>
        <junit.platform.version>1.0.0-M4</junit.platform.version>

        <junit.version>4.12</junit.version>
        <junit.vintage.version>${junit.version}.0-M4</junit.vintage.version>

        <cucumber.version>1.2.5</cucumber.version>
        <assertj.version>3.6.2</assertj.version>
        <mockito.version>2.7.19</mockito.version>

        <assembly.plugin.version>2.6</assembly.plugin.version>
		<checkstyle.plugin.version>2.17</checkstyle.plugin.version>
		<checkstyle.version>7.6.1</checkstyle.version>
		<compiler.plugin.version>3.6.1</compiler.plugin.version>
		<dependency.plugin.version>2.3</dependency.plugin.version>
		<findbugs.plugin.version>3.0.3</findbugs.plugin.version>
		<guava.plugin.version>21.0</guava.plugin.version>
		<jacoco.plugin.version>0.7.6.201602180812</jacoco.plugin.version>
		<jar.plugin.version>2.6</jar.plugin.version>
		<jxr.plugin.version>2.5</jxr.plugin.version>
		<javadoc.plugin.version>2.10.3</javadoc.plugin.version>
		<projectinfo.plugin.version>2.9</projectinfo.plugin.version>
		<pmd.plugin.version>3.6</pmd.plugin.version>
		<shade.plugin.version>2.4.3</shade.plugin.version>
		<surefire.plugin.version>2.19.1</surefire.plugin.version>

		<checkerframework.plugin.version>2.1.10</checkerframework.plugin.version>
		<!-- IntelliJ will warn about this line, but the maven-dependency-plugin
		     does correctly resolve this, so there is nothing to worry about. -->
		<annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.plugin.version}</version>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.vintage.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
			<version>${checkerframework.plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker</artifactId>
			<version>${checkerframework.plugin.version}</version>
		</dependency>
		<!-- The annotated JDK to use (change to jdk7 if using Java 7). -->
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>jdk8</artifactId>
			<version>${checkerframework.plugin.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- This plugin will set properties values using dependency information -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${dependency.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<fork>true</fork>
					<annotationProcessors>
						<annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
					</annotationProcessors>
					<compilerArgs>
						<arg>-Xbootclasspath/p:${annotatedJdk}</arg>
						<arg>-AskipUses=^java</arg>
						<arg>-AskipDefs=Test$|e2e</arg>
						<arg>-AassumeAssertionsAreEnabled</arg>
					</compilerArgs>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assembly.plugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/src-assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${jar.plugin.version}</version>
				<configuration>
					<useDefaultManifestFile>true</useDefaultManifestFile>
				</configuration>
				<executions>
					<execution>
						<id>test-files</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
					<execution>
						<id>src-files</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- The checkstyle, findbugs and PMD plugins have configurations, for
				the checkstyle:checkstyle and pmd:pmd to work properly, the plugins should
				also be specified under the build section. See: https://github.com/sevntu-checkstyle/checkstyle-samples/blob/master/maven-project/pom.xml -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>${basedir}/checkstyle.xml</configLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<failOnViolation>true</failOnViolation>
					<violationSeverity>warning</violationSeverity>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.plugin.version}</version>
				<configuration>
					<skipEmptyReport>false</skipEmptyReport>
					<includeTests>true</includeTests>
					<rulesets>
						<ruleset>pmd-rules.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs.plugin.version}</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<includeTests>true</includeTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${junit.platform.version}</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.jupiter.version}</version>
					</dependency>
					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>${junit.vintage.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<haltOnFailure>false</haltOnFailure>
			  				<rules>
								<rule>
				  					<element>BUNDLE</element>
				 					<limits>
					 					<limit>
					  						<counter>LINE</counter>
					  						<value>COVEREDRATIO</value>
					  						<minimum>0.60</minimum>
										</limit>
				  					</limits>
								</rule>
			  				</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${shade.plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
						<createDependencyReducedPom>false</createDependencyReducedPom>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${projectinfo.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc.plugin.version}</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<reportSets>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${jxr.plugin.version}</version>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
			</plugin>

			<plugin> <!-- JUnit report -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>${basedir}/checkstyle.xml</configLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.plugin.version}</version>
				<configuration>
					<skipEmptyReport>false</skipEmptyReport>
					<includeTests>true</includeTests>
					<rulesets>
						<ruleset>pmd-rules.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs.plugin.version}</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<includeTests>true</includeTests>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
